= API For App =

== 数据结构约定 ==
=== 主副账户详细信息 ===
<source>
//成功 200
{
  "_id": String, // 用户姓名
  "phoneNum": String,
  "name": String,
  "pinyinName": String,
  "avatar": "String",
  "sex": String,
  "hasPayPwd": false,//是否有密码
  "docChatNum": String,
  "sessionToken": String,//会话token
  "mainPageTitle": String,//主页标题

  "pushId": String, //绑定的第三方Push Server ID
  "pushType": String,

  "accid": String,//app登陆网易云信账号
  "callToken": String,//app登陆网易云信密码
  "isAccidBlocked": Boolean,//网易云信账号是否被封禁

  "sidName": String, //身份证上姓名
  "sid": String, //身份证号
  "updatedAt": Number,
  "createdAt": Number,
  "favoriteDocs": [String], //当前收藏的用户Id
  "isPriceEdit": Boolean, // 是否可编辑定价
  "priceLevelList": [{}], //定价模型列表
  
  "doctorRef": {//副表信息
    "_id": String,
    "callPrice": {
      "discount": Number,
      "customerInitiateTime": Number,
      "doctorInitiateTime": Number,
      "initiatePayment": Number,
      "initiateIncome": Number,
      "paymentPerMin": Number,
      "incomePerMin": Number
    },
    "hospital": String,
    "department": String,
    "city": String,
    "province": String,
    "profile": String,
    "position": "String",
    "zanNum": Number, //评论中点赞次数
    "commentNum": Number, //评论次数
    "orderNum": Number, //电话总数
    "downloadNum": Number, //通过扫码下载数
    "sharedNum": Number, //被分享次数
    "scannedNum": Number, //二维码被扫描次数
    "favoritedNum": Number, //被患者收藏数
    "isOnline": false,
    "occupation": String,
    "lastPriceChgAt": Number,
    "from": String //账号创建的来源
  },
  "_sys_info_cdn": { // 系统cdn信息
    "uri": "http://7j1ztl.com1.z0.glb.clouddn.com/",
    "token": "",
    "smallView": "imageView2/2/w/50/h/50",
    "middleView": "imageView2/2/w/80/h/80",
    "commentDelay": 2000 //评论延迟时间
  },
  "_sys_info_400": { // 系统400信息
    "phoneNum": "010-56291996",
    "ivrCallPhone": "4006501445",
    "callbackPhone": "010-57733871",
    "callbackPhones": [
      "010-57733871",
      "02868073247"
    ],
    "brokerTel": "010-56291996"
  },
  "_sys_info_doc_chat_num_regex": [// 系统拨号规则
    "^[0-6][0-9]{4}$",  // 0-6开头的5位数字
    "^[7][0-9]{6}$",    // 7开头的7位数字
    "^[8][0-9]{5}$",    // 8开头的6位数字
    "^*[0-9]{3}",       // *开头的3位数字- for test
    "^#[0-9]{4}"        // #开头的4位数字- for test
  ]
}
</source>
=== 主副账户公开信息 ===
<source>
//成功 200
{
  "_id": String, // 用户姓名
  "name": String,
  "pinyinName": String,
  "avatar": "String",
  "sex": String,
  "docChatNum": String,
  "mainPageTitle": String,//主页标题

  "doctorRef": {//副表信息
    "_id": String,
    "callPrice": {
      "discount": Number,
      "customerInitiateTime": Number,
      "doctorInitiateTime": Number,
      "initiatePayment": Number,
      "initiateIncome": Number,
      "paymentPerMin": Number,
      "incomePerMin": Number
    },

    "callPriceDescription": String, //定价模型文字描述(用于后端控制前端显示)
    "message2Customer" : String, //医生展示的动态信息

    "hospital": String,
    "hospitalId" : String, //执业地点Id
    "department": "String",  //科室
    "departmentId" : String, //科室Id
    "position" : String, //职称
    "occupation": String, //职业
    "city": String,
    "province": String,
    "profile": String,

    "zanNum": Number, //评论中点赞次数
    "commentNum": Number, //评论次数

    "isOnline": false,
    "favoritedReward": false, //被收藏是否可以获得奖励
    "seedDoctor": false,
    "from": String //账号创建的来源
  }
}
</source>

== 接口明细 ==

=== 10xx 通用接口 ===

==== 1004 获取执业信息 ====
* URI: /1/common/practice

==== 1005 获取验证码 ====
* URI: /1/common/authCode
* Method: GET
* URI params:
** phoneNum
** from //setPayPwd设置支付密码
* Response:
<source>
//成功 200
{
    phoneType: String, //mobile--手机号 fixed--座机号
    phoneStr: String, //手机号不变; 座机号,区号后添加中划线
}
</source>

==== 1007 获取充值活动信息 ====
* URI: /1/common/recharge/options

==== 1008 获取广告信息 ====
* URI: /1/common/banners
* Updates
** 如果banner类型是医生主页,应该通过主账户ID访问

==== 1012 获取所有的地级市及直辖市列表 ====
* URI: /1/common/regions
* Method: GET
* Response:
<source>
//成功 200
{
    items:[
        {
            "city": String,
            "regionPinyin": String
        },
        ...
    ]
}
</source>

=== 20xx 账户相关接口 ===

==== 2001.账户登录 ====
* URI: /1/customer/login
** 返回数据-主副账户信息
* Method: POST
* Request payload:
<source>
    required: ['phoneNum', 'loginType',],
    optional: ['authCode','password']
      //phoneNum: String 手机号
      //loginType: String 登录类型 byAuthCode 验证码登录 byPwd 通过密码登录
      //authCode: String, 验证码
      //password: String 密码
</source>
* Response payload:
<source>
//成功 200
{
  "isOccupationSet" : boolean //是否已完善职业信息
  "hasPwd" : boolean // 新增：是否有登录密码
  "_id": String, // 用户姓名
  "phoneNum": String,
  "name": String,
  "pinyinName": String,
  "avatar": "String",
  "sex": String,
  "hasPayPwd": false,//是否有密码
  "docChatNum": String,
  "sessionToken": String,//会话token
  "mainPageTitle": String,//主页标题

  "pushId": String, //绑定的第三方Push Server ID
  "pushType": String,
  "accid": String,//app登陆网易云信账号
  "callToken": String,//app登陆网易云信密码
  "isAccidBlocked": Boolean,//网易云信账号是否被封禁

  "sidName": String, //身份证上姓名
  "sid": String, //身份证号
  "updatedAt": Number,
  "createdAt": Number,
  "favoriteDocs": [String], //当前收藏的用户Id
  "canSearched": Boolean, //  是否允许被搜索

  //消息读取状态
  msgReadStatus: {
     all: Boolean,
     moment: Boolean, //是否有未读的动态
     msg: Boolean, //是否有未读的个人留言
     sys: Boolean, //是否有未读的系统通知
    },
  //自动离线 
  isAutoOffline: Boolean, //是否开启自动离线,true-开启自动离线,false-关闭自动离线 
  offlineBeginTime: String, //离线开始时间,格式为22:00 
  offlineEndTime: String, //离线结束时间,格式为08:00
  "doctorRef": {//副表信息
    "_id": String,
    "callPrice": {
      "discount": Number,
      "customerInitiateTime": Number,
      "doctorInitiateTime": Number,
      "initiatePayment": Number,
      "initiateIncome": Number,
      "paymentPerMin": Number,
      "incomePerMin": Number
    },
    "message2Customer" : String, //医生展示的动态信息
    "hospital": String,
    "department": String,
    "city": String,
    "province": String,
    "profile": String,
    "position": "String",
    "zanNum": Number, //评论中点赞次数
    "commentNum": Number, //评论次数
    "orderNum": Number, //电话总数
    "downloadNum": Number, //通过扫码下载数
    "sharedNum": Number, //被分享次数
    "scannedNum": Number, //二维码被扫描次数
    "favoritedNum": Number, //被患者收藏数
    "isOnline": false,
    "occupation": String,
    "lastPriceChgAt": Number,
    "from": String //账号创建的来源
  },
  "_sys_info_cdn": { // 系统cdn信息
    "uri": "http://7j1ztl.com1.z0.glb.clouddn.com/",
    "token": "",
    "smallView": "imageView2/2/w/50/h/50",
    "middleView": "imageView2/2/w/80/h/80",
    "commentDelay": 2000 //评论延迟时间
  },
  "_sys_info_400": { // 400信息
    "phoneNum": "010-56291996",
    "ivrCallPhone": "4006501445",
    "callbackPhone": "010-57733871",
    "callbackPhones": [
      "010-57733871",
      "02868073247"
    ],
    "brokerTel": "010-56291996"
  },
  "_sys_info_doc_chat_num_regex": [
    "^[0-6][0-9]{4}$",  // 0-6开头的5位数字
    "^[7][0-9]{6}$",    // 7开头的7位数字
    "^[8][0-9]{5}$",    // 8开头的6位数字
    "^*[0-9]{3}",       // *开头的3位数字- for test
    "^#[0-9]{4}"        // #开头的4位数字- for test
  ],
  "shopVenderApplyStatus": Number ,//0-未申请 1-申请中 2-拒绝 3-通过 4-再次申请 5-再次拒绝
}
//失败
{
   "code" :Number,  //Error Code
   "msg" :String    //Error Message
}
</source>

==== 2005.更新患者基本信息 ====
* URI: /1/customer/updateBaseInfo
* Method: PUT
* Request payload:
<source>
    {
      //required-必须
      userId: String, //用户id

      //optional-可选
      name: String, //姓名
      avatar: String, //头像
      channelCode : String, //邀请码
      sex : String, //性别
      profile : String //个人简介
      mainPageTitle : String //主页标题
      canSearched : Boolean //是否能被搜索
      isMarketingClosed: Boolean //true-暂停推广, false-继续推广
    }
</source>
* Response payload:
<source>
//成功 200
{
  "_id" : String,            //用户UUID
  "name" : String,           //姓名
  "phoneNum" : String,       //注册手机号码
  "docChatNum" : String,     //医聊号码
}
</source>

==== 2006.我的收藏 ====
* URI: /1/customer/favoriteDocs
* Method: GET
* Header:
** 验证id和token
* URI params:
** userId
* Response payload:
<source>
//成功 200
[{
  _id: String, //用户主账号ID
  avatar: String, //头像
  sex: String,
  name: String, //名字
  pinyinName: String, //拼音名字
  docChatNum: String, //热线号
  currentMoment: String, //最新动态
  profile: String,//简介
}]
</source>

==== 2022.获取所有有效的优惠券 ====
* URI: /1/customer/validCouponsById
* Method: GET
* URI params:
** userId
* Response payload:
<source>
//成功 200
[
 {
    "_id": String,
    "type": Number, //优惠券类型，0-普通优惠券 1-活动优惠券(限定日期以及时间段)  2-购买专属医生专用折扣券
    "activityNO": String, // 活动码
    "title": String, //优惠劵标题
    "subTitle": String, //优惠劵副标题
    "description": String, //优惠券描述
    "rmb": Number, //金额
    "dateBegin": Number, //活动起始日期，如：1454774400000
    "dateEnd": Number, //活动结束日期，如：1454947200000
    "timeBegin": Number, //活动日起始时间，如：9
    "timeEnd": Number,//活动日结束时间，如：21
    "expiredAt": Number, //过期时间

    //type=2时
    "rmbDescription":String, ////面值描述
    "discount":Number, //折扣率

    "updatedAt": Number,
    "createdAt": Number,

    //如有二维码信息
    qrCoupon: { //type = 8,代金券含有二维码信息
      "rmb": Number, //金额
      "avatar": String, //二维码中头像
      "qrUrl": String, //二维码被扫描跳转
      "qrDesc": String, //二维码下的描述
      "unionCode": String, //代金券唯一编号
      "desc": String, //代金券描述
        }
  }
]
</source>
==== 2040.用户查看医生的推荐列表:备用联系人====
* URI: /1/customer/doctor/recommendList/bakContact
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** doctorId // 必填,用户的副表ID
* Request payload: NULL
* Response payload:
<source>
//成功 200

[
  {
     //同2044返回数据
  }
]
</source>

==== 2041.用户查看医生的推荐列表:服务助理====
* URI: /1/customer/doctor/recommendList/assistant
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** doctorId // 必填,用户的副表ID
* Request payload: NULL
* Response payload:
<source>
//成功 200

[
  {
     //同2044返回数据
  }
]
</source>

==== 2042.用户查看医生的推荐列表:推广合作====
* URI: /1/customer/doctor/recommendList/ad
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** doctorId // 必填,医生ID
* Request payload: NULL
* Response payload:
<source>
//成功 200

[
  {
     //同2044返回数据
  }
]
</source>

==== 2044.查看粉丝列表 ====
* URI: /1/customer/allFavoriteCustomer
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
* Response payload:
<source>
//成功 200
{
    count: Number, //我的粉丝总数
    items: [{
        _id: String, //用户主账号ID
        avatar: String, //头像
        sex: String,
        name: String, //名字
        docChatNum: String, //热线号
        currentMoment: String, //最新动态
        profile: String,//简介
    }]
}
</source>

==== 2050.获取用户的私人信息(CDN,400,账号信息等) ====
* URI: /1/customer/privateInfoById
* Method: GET
* Header:
** 验证id和token
* URI params: NULL
* Response payload:
<source>
//成功 200
{
  "isOccupationSet" : Boolean,//是否已完善职业信息
  "hasNewMessage": Boolean,//查看过消息后,是否又有新消息
  "_id": String, // 用户姓名
  "phoneNum": String,
  "name": String,
  "pinyinName": String,
  "avatar": "String",
  "sex": String,
  "hasPayPwd": false,//是否有密码
  "docChatNum": String,
  "sessionToken": String,//会话token
  "mainPageTitle": String,//主页标题

  "pushId": String, //绑定的第三方Push Server ID
  "pushType": String,

  "accid": String,//app登陆网易云信账号
  "callToken": String,//app登陆网易云信密码

  "sidName": String, //身份证上姓名
  "sid": String, //身份证号
  "updatedAt": Number,
  "createdAt": Number,
  "favoriteDocs": [String], //当前收藏的用户Id
  "doctorRef": {//副表信息
    "_id": String,
    "isPriceEdit": Boolean, //是否可编辑定价
      "priceLevelList": [{
        level: String,//
        title: String
      }], //定价模型列表
    "message2Customer" : String, //医生展示的动态信息
    "hospital": String,
    "department": String,
    "city": String,
    "province": String,
    "profile": String,
    "position": "String",
    "occupation": String,

    "zanNum": Number, //评论中点赞次数
    "commentNum": Number, //评论次数
    "favoritedNum": Number, //被患者收藏数
    "isOnline": false,
    "lastPriceChgAt": Number,
    "from": String //账号创建的来源
    "callPrice": {
          "discount": Number,
          "customerInitiateTime": Number,
          "doctorInitiateTime": Number,
          "initiatePayment": Number,
          "initiateIncome": Number,
          "paymentPerMin": Number,
          "incomePerMin": Number
    }
  },
  "canSearched": Boolean, //  是否允许被搜索
  //消息读取状态
  msgReadStatus: {
     all: Boolean,
     moment: Boolean, //是否有未读的动态
     msg: Boolean, //是否有未读的个人留言
     sys: Boolean, //是否有未读的系统通知
    },
  //自动离线 
  isAutoOffline: Boolean, //是否开启自动离线,true-开启自动离线,false-关闭自动离线 
  offlineBeginTime: String, //离线开始时间,格式为22:00 
  offlineEndTime: String, //离线结束时间,格式为08:00

  "city": String,
  "province": String,

  "_sys_info_cdn": { // 系统cdn信息
    "uri": "http://7j1ztl.com1.z0.glb.clouddn.com/",
    "token": "",
    "smallView": "imageView2/2/w/50/h/50",
    "middleView": "imageView2/2/w/80/h/80",
    "commentDelay": 2000 //评论延迟时间
  },
  "_sys_info_400": { // 400信息
    "phoneNum": "010-56291996",
    "ivrCallPhone": "4006501445",
    "callbackPhone": "010-57733871",
    "callbackPhones": [
      "010-57733871",
      "02868073247"
    ],
    "brokerTel": "010-56291996"
  },
  "_sys_info_doc_chat_num_regex": [
    "^[0-6][0-9]{4}$",  // 0-6开头的5位数字
    "^[7][0-9]{6}$",    // 7开头的7位数字
    "^[8][0-9]{5}$",    // 8开头的6位数字
    "^*[0-9]{3}",       // *开头的3位数字- for test
    "^#[0-9]{4}"        // #开头的4位数字- for test
  ]
}
</source>

==== 2051.通过主账号ID查询账户信息 ====
* URI: /1/customer/publicInfoById
* Method: GET
* Header:
** 验证id和token
* URI params:
** userId //必选 主账号ID
** needRecommendInfo //可选 是否需要推荐信息, 是: 1, 否: 0
** couponValue //可选 商家列表随机产生的代金券金额
* Response payload:
<source>
//成功 200
{
  "_id": String, // 用户姓名
  "name": String,
  "pinyinName": String,
  "avatar": "String",
  "sex": String,
  "docChatNum": String,
  "mainPageTitle": String,//主页标题
  "profile": String, //个人简介
  "invited": Boolean, //最近7天该用户是否被邀请过 true = 被邀请过, false = 未被邀请过

  // currentMoment = ''时, momentRef不存在,或者为null
  "isZaned": Boolean, //是否已点过赞
  "currentMoment": String, //展示给用户的动态内容
  "momentRef" : { //动态信息
    zanCount: Number, //点赞数
    sharedCount: Number, //分享次数
    isOriginal: Boolean, 是否为首发
    originalUser: { //首发人信息
      userId: String, //首发人主账号id
      userName: String, //首发人姓名
      docChatNum: String //首发人热线号
     },
    pics: [String], //动态相关的图片
    //动态中 不含有 被推荐人信息时,recommendedUser为null
    recommendedUser: { //动态中含有被推荐人信息
      userName: String, //被推荐人姓名
      docChatNum: String //被推荐人热线号
    }
  },

  "doctorRef": {//副表信息
    "_id": String,
    "callPrice": {
      "discount": Number,
      "customerInitiateTime": Number,
      "doctorInitiateTime": Number,
      "initiatePayment": Number,
      "initiateIncome": Number,
      "paymentPerMin": Number,
      "incomePerMin": Number
    },

    "message2Customer" : String, //兼容老版本动态信息

    "hospital": String,
    "hospitalId" : String, //执业地点Id
    "department": "String",  //科室
    "departmentId" : String, //科室Id
    "position" : String, //职称
    "occupation": String, //职业
    "city": String,
    "province": String,
    "profile": String,

    "zanNum": Number, //评论中点赞次数
    "commentNum": Number, //评论次数

    "isOnline": false,
    "favoritedReward": false, //被收藏是否可以获得奖励
    "seedDoctor": false,
    "from": String //账号创建的来源
  }

  //new
  recommendConf: [ //推荐信息,needRecommendInfo=1,会返回该数据
     {
        "item":"bak",
        "isVisiable":true,
        "disabled":false,
        "type":"doctor",
        "title":"张广平",
        "docChatNum":"01551",
        "link":"",
        "more":{
          "disabled":false,
          "type":"doctor_list",
          "title":"备用联系人",
          "url":"http://api.dc-test.zlycare.com/1/customer/doctor/recommendList/bakContact?doctorId=57d7c21e169991094da7ce2c"
        }
      },
      {
        "item":"ass",
        "isVisiable":true,
        "type":"doctor",
        "title":"Kurt",
        "docChatNum":"10086",
        "link":"",
        "disabled":false,
        "more":{
          "type":"doctor_list",
          "title":"服务助理",
          "url":"http://api.dc-test.zlycare.com/1/customer/doctor/recommendList/assistant?doctorId=57d7c21e169991094da7ce2c",
          "disabled":false
        }
      },
      {
        "item":"ad",
        "isVisiable":true,
        "type":"doctor",
        "title":"Kurt",
        "docChatNum":"10086",
        "link":"https://www.baidu.com/s?wd=朱李叶",
        "disabled":false,
        "more":{
          "type":"doctor_list",
          "title":"猜你喜欢",
          "url":"http://api.dc-test.zlycare.com/1/customer/doctor/recommendList/ad?doctorId=57d7c21e169991094da7ce2c",
          "disabled":false,
          "isBroker":true,
          "hint":"想要出现在这里？立即出价",
          "hintLink":"http://web.dc-test.zlycare.com/ad_pay.html?pay=init"
        }
      }
  ],

  //auth shop view
  isFavorite: Boolean, //是否已收藏
  isShopAuthorized: Boolean, //商家是否已认证
  shopAvatar : String,//商家头像
  shopName : String,//店铺名称
  shopType : String,//店铺类型
  shopSubType : String,//店铺子类型

  shopAddress : String,//店铺地址
  shopLocationLon : Number,//经度
  shopLocationLat : Number,//纬度
  shopCity : String,//店铺城市

  shopPhoneNum : String,//店铺电话号码
  shopLicense : String, //商家营业执照

  //shop代金券信息
  coupons: [{
    couponName: String, //券的名称,如"代金券"
    //未领取时,随机产生的代金券金额,若前端传值,验证合法性;已领取的代金券金额
    couponValue: Number, //代金券金额,会有小数,
    consumedMemberSize: Number, //已领取的张数
    remainMemberSize: Number, //剩余张数
    hasGotCoupon: Boolean, //是否已获取该代金券
    hasCouponUsed: Boolean, //代金券是否已使用
    couponValidTimeDes: String, //代金券有效期描述

    //hasGotCoupon = true时,返回代金券信息
    userCoupon: {
        "rmb": Number, //金额
        "avatar": String, //二维码中头像
        "qrUrl": String, //二维码被扫描跳转
        "qrDesc": String, //二维码下的描述
        "unionCode": String, //代金券唯一编号
        "desc": String, //代金券描述
    }
  }]
}
</source>

==== 2052.通过副账号Id查询账户信息 ====
* URI: /1/customer/publicInfoByDocId
* Method: GET
* Header:
** 验证id和token
* URI params:
** docId
** needRecommendInfo //是否需要推荐信息, 是: 1, 否: 0
* Response payload:
<source>
//成功 200
返回结果同2051接口
</source>

==== 2054.得到对某一个用户设置的信息 ====
* URI: /1/customer/otherUserConfig
* Method: GET
* Request payload:
<source>
    {
      userId: String,
      otherUserId: String, //被设置人的id
    }
</source>
* Response payload:
<source>
//成功 200
{
  "favourite": true, // 是否收藏
  "block": true, //是否收听动态
  "blackList": false  //是否加入黑名单
  "note":String //备注
  "isEnableSendMsg":Boolean //是否允许发送留言
  "noteInfo": { //备注信息
    noteName: String, //被标注姓名
    desc: String, //描述
    pics: [String] //备注图片
  }
}
</source>

==== 2065.发布动态 ====
* URI: /1/customer/moment
* Method: POST
* 验证token
* URI params:
* Request payload:
<source>
    {
      optional: ["message2Customer", 'pics', 'hongbao', 'recommendedUser', 'location']
      //hongbao-红包id; recommendedUser-被推荐人主账号ID; 发布动态时所在的坐标,类型String,如,'纬度,经度'
    }
</source>
* Response payload:
<source>
//成功 200
{

}
</source>

==== 2067.初始化用户信息(首次登录后) ====
* URI: /1/customer/initUserInfo
* Method: PUT
* Header:
** 验证id和token
* Request payload:
    {
        required: ['password',"name","sex"],
        optional: ['channelCode']
    }
* Response payload:
<source>
//成功 200
{
    hasPwd : true
}
</source>

==== 2068.通过验证码更改用户密码 ====
* URI: /1/customer/setPwdByAuthCode
* Method: PUT
* Request payload:
    {
        required: ['phoneNum',"authCode","password"]
    }
* Response payload:
<source>
//成功 200
</source>

==== 2069.通过初始密码更改用户密码 ====
* URI: /1/customer/setPwdByOldPwd
* Method: PUT
* Header:
** 验证id和token
* Request payload:
    {
        required: ["password"]
        optional: ['oldPassword']
    }
* Response payload:
<source>
//成功 200
</source>

==== 2070.申请纸质名片 ====
* URI: /1/customer/cardApply
* Method: POST
* Header:
** 验证id和token
* Request payload:
** required: ['receiveArea', 'receiveAddress','receiveName','receivePhone']
<source>
{
    "receiveArea": Number, //收货地区：将省市区拼起来
    "receiveAddress": Number, //详细地址
    "receiveName": Boolean, //收件人姓名
    "receivePhone": Number, //收件人电话
}
</source>
* Response payload:
<source>
//成功 200
</source>

==== 2071.自定义咨询定价 ====
* URI: /1/customer/callPrice
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    "initiateIncome": Number, //起步收入
    "incomePerMin": Number, //起步时长后每分钟收入
    "canLackMoney": Boolean, //是否允许欠费 true-允许欠费

    //optional-可选
    "lackedMoney": Number, //欠费金额;canLackMoney = true时,lackedMoney须有值
}
</source>
* Response payload:
<source>
//成功 200
</source>

==== 2072.获取咨询定价信息 ====
* URI: /1/customer/callPrice
* Method: GET
* Header:
** 验证id和token
* URI params:
* Response payload:
<source>
//成功 200
{
    "callPrice": { //当前咨询定价
        "discount": Number,
        "doctorInitiateTime": Number, //被叫起步价包含时长,单位分钟
        "initiatePayment": Number, //主叫起步支出
        "initiateIncome": Number, //被叫起步收入
        "paymentPerMin": Number, //主叫起步时长后每分钟支出
        "incomePerMin": Number, //被叫起步时长后每分钟收入
        "canLackMoney": Boolean, //能否欠费
        "lackedMoney": Number, //欠费金额
        },
    "priceLevelList": [ //定价模型列表
        {
          level: "零",
          title: "免费",
          extra: ""
        },
        {
          level: "一",
          title: "5分钟内8元，之后2元/分钟",
          extra: "允许最多欠费30元"
        },
        {
          level: "二",
          title: "5分钟内16元，之后4元/分钟",
          extra: "允许最多欠费60元"
        },
        {
          level: "三",
          title: "5分钟内40元，之后10元/分钟",
          extra: "允许最多欠费150元"
        },
        {
          level: "四",
          title: "5分钟内80元，之后18元/分钟",
          extra: "允许最多欠费270元"
        },
        {
          level: "五",
          title: "5分钟内8元，之后2元/分钟",
          extra: ""
        },
        {
          level: "六",
          title: "5分钟内16元，之后4元/分钟",
          extra: ""
        },
        {
          level: "七",
          title: "5分钟内40元，之后10元/分钟",
          extra: ""
        },
        {
          level: "八",
          title: "5分钟内80元，之后18元/分钟",
          extra: ""
        }
    ]
}
</source>

==== 2073.通过手机号获取用户部分信息（热线号 、 id） ====
* URI: /1/customer/getPartInfoByPhoneNum
* Method: GET
* Header:
** 验证id和token
* URI params:
** phoneNum //手机号码
* Response payload:
<source>
//成功 200
{
  "_id": String, //用户id
  "docChatNum": String //热线号
}
</source>


==== 2074.设置cps ====
* URI: /1/customer/marketing/costPerSale
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    "cps": Number, //新增一个用户支付的价格

}
</source>
* Response payload:
<source>
//成功 200
</source>

==== 2080.搜索-模糊匹配 ====
* URI: /1/customer/search/all
* Method: GET
* Header:
** 验证id和token
* URI params:
** keyword
* Response payload:
<source>
//成功 200
{
    keyword: String, //搜索关键字
    myFavoriteList : { //我的收藏
        count: Number, //我的收藏,查询总数
        hasMore: Boolean, //是否可以查看更多
        items: [{
            _id: String, //用户主账号ID
            avatar: String, //头像
            sex: String,
            name: String, //名字
            docChatNum: String, //热线号
            currentMoment: String, //最新动态
            profile: String,//简介
        }]
    },
    myFansList : { //我的粉丝
        count: Number,
        hasMore: Boolean,
        items: [{
            _id: String, //用户主账号ID
            avatar: String, //头像
            sex: String,
            name: String, //名字
            docChatNum: String, //热线号
            currentMoment: String, //最新动态
            profile: String,//简介
        }]
    },
    otherList : { //其他,docChatNum以7开头的用户
        count: Number,
        hasMore: Boolean,
        items: [{
            _id: String, //用户主账号ID
            avatar: String, //头像
            sex: String,
            name: String, //名字
            docChatNum: String, //热线号
            currentMoment: String, //最新动态
            profile: String,//简介
        }]
    }
}
</source>

==== 2081.搜索-我的收藏 ====
* URI: /1/customer/search/favorites
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** keyword
* Response payload:
<source>
//成功 200
{
    keyword: String, //搜索关键字
    count: Number, //我的收藏,查询总数
    items: [{
        _id: String, //用户主账号ID
        avatar: String, //头像
        sex: String,
        name: String, //名字
        docChatNum: String, //热线号
        currentMoment: String, //最新动态
        profile: String,//简介
    }]
}
</source>

==== 2082.搜索-我的粉丝 ====
* URI: /1/customer/search/fans
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** keyword
* Response payload:
<source>
//成功 200
{
    keyword: String, //搜索关键字
    count: Number, //我的粉丝,查询总数
    items: [{
        _id: String, //用户主账号ID
        avatar: String, //头像
        sex: String,
        name: String, //名字
        docChatNum: String, //热线号
        currentMoment: String, //最新动态
        profile: String,//简介
    }]
}
</source>

==== 2083.搜索-其他的docChatNum以7开头的用户 ====
* URI: /1/customer/search/others
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** keyword
* Response payload:
<source>
//成功 200
{
    keyword: String, //搜索关键字
    count: Number, //查询总数
    items: [{
        _id: String, //用户主账号ID
        avatar: String, //头像
        sex: String,
        name: String, //名字
        docChatNum: String, //热线号
        currentMoment: String, //最新动态
        profile: String,//简介
    }]
}
</source>

==== 2084.分享领取优惠券和会员额度活动 ====
* URI: /1/customer/sharePromotionByAuthCode
* Method: POST
* URI params:
* Response payload:
<source>
//成功 200
{}
</source>

==== 2085.外部被分享出去页面领取优惠券和会员额度活动 ====
* URI: /1/customer/sharePromotion
* Method: GET
* Page
* Header:
** 验证id和token
* Request payload:
** required: ['phoneNum', 'authCode']
* Response payload:
<source>
//成功 200
{}
</source>



==== 2086.商户认证申请 ====
* URI: /1/customer/shopApply
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    required: ['shopCity', 'shopName','shopAddress','shopType','shopPhoneNum','shopAvatar','shopLicense'，'shopSubType'],
    optional: ['shopAddressMapLon','shopAddressMapLat']
    shopCity : String,//店铺城市
    shopName : String,//店铺名称
    shopAddress : String,//店铺地址
    shopAddressMapLon : Number,//经度
    shopAddressMapLat : Number,//纬度
    shopType : String,//店铺类型
    shopPhoneNum : String,//店铺电话号码
    shopAvatar : String,//商家头像
    shopLicense : String, //商家营业执照

}
* Response payload:
<source>
//成功 200
{}
</source>

==== 2087.领取3天3夜优惠券活动 ====
* URI: /1/customer/getCouponConsumedMembership
* Method: GET
* URI params:
    需要userId和token
* Response payload:
<source>
//成功 200
{}
//失败 1604 已领取过
       2109 额度不足
</source>

==== 2088.分享领取3天3夜领取优惠券活动 ====
* URI: /1/customer/getCouponConsumedMembershipByShare
* Method: GET
* URI params:
    需要userId和token
* Response payload:
<source>
//成功 200
{}
//失败 1604 已领取过
       2109 额度不足
</source>

==== 2089.外部 分享领取3天3夜领取优惠券活动 ====
* URI: /1/customer/getCouponConsumedMembershipByShare
* Method: POST
* Page
* Header:
** 验证id和token
* Request payload:
** required: ['phoneNum', 'authCode']
* Response payload:
<source>
//成功 200
{}
//失败 1604 已领取过
       2109 额度不足
</source>

==== 2090.红包-查看红包领取记录 ====
* URI: /1/customer/hongbaorecord
* Method: GET
* Header:
** 验证id和token
* Request payload:
<source>
{
    hongbaoId: String, //红包Id
}
</source>
* Response payload:
<source>
//成功 200
{
    //用户为包红包的人
    momentContent: String, //红包绑定的动态的内容
    //用户为红包领取者
    status: String, //领取红包的状态, got - 已领取, none - 红包已被抢完, expired - 红包已过期
    hongbaoValue: Number, //领取的金额

    totalCount: Number, //红包总个数
    restCount: Number, //未被领取的红包个数,
    usedHongbaos: [{ //已领取的红包信息
        userName: String, //领取红包人的姓名
        userId: String, //领取红包人的主账号Id
        hongbaoValue: Number, //领取的金额
        usedAt: Number //领取的时间
    }]
}
</source>

==== 2100.消息-获取消息列表 ====
* URI: /1/customer/messages
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** type //moment-动态 personal-留言 sys-系统通知
* Request payload:
* Response payload:
<source>
//成功 200
{
    totalCount: Number, //总消息条数, 暂为未读消息条数
    notViewedCount: Number, //未读消息条数
    items: [{
        _id: String, //消息id
        type: String, //消息类型, hongbao_refund,hongbao_record,personal,moment
        title: String, //消息的标题
        content: String, //消息的内容
        link: String, //type = hongbao_record时,点击消息跳转的链接
        link_title: String,
        linkType: String, //web-跳转到外部网页, marketing-推广, assistant-服务助理, income_tf-收款 couponReward-用券返现, hongbaoRefund-红包退款
        trxType: String, //交易明细类型(api:/customer/transaction?orderId=&trxType=): hongbaoRefund,couponReward
        orderId: String, //orderId,
        orderValue: Number, //调用api(1/order?orderId=?)时,须知道该用户的订单金额
        linkData: String, //linkType= assistant时,为收款人id
        createdAt: Number, //消息的创建时间
        isViewed: Boolean, //消息是否已查看
        //留言
        pics: [String], //留言对应的图片
        messageFrom: { //
          _id: String, //留言者的主账号ID
          name: String, //姓名
          avatar: String, //头像
          sex: String, //性别
          docChatNum: String, //热线号
          profile: String, //简介
        }
    }]
}
</source>

==== 2101.消息-标记消息已读 ====
* URI: /1/customer/message/mark
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    messageId: String //消息id
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2102.消息-生成消息 ====
* URI: /1/customer/message
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必须的
    type: String, //personal-给用户留言
    messageTo: String, //给谁留言,userId
    content: String, //留言内容

    //optional-可选
    //** type=personal, subType= normal || pay
    subType: String, //留言类型, normal-正常留言, pay-提醒支付
    toMessageId : String,//回复的留言id
    //for: normal-正常留言
    pics: [String],

    //for: pay-提醒支付
    orderId: [String], //提醒支付订单Id
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2103.消息-获取信息查看状态 ====
* URI: /1/customer/msgReadStatus
* Method: GET
* Header:
** 验证id和token
* Request payload:
* Response payload:
<source>
//成功 200
{
    all: Boolean,
    moment: Boolean, //是否有未读的动态
    msg: Boolean, //是否有未读的个人留言
    sys: Boolean, //是否有未读的系统通知
}
</source>

==== 2104.消息-获取某一条消息 ====
* URI: /1/customer/message
* Method: GET
* Header:
** 验证id和token
* URI params:
** msgId //消息id
* Request payload:
* Response payload:
<source>
//成功 200
{
  _id: String, //消息id
  type: String, //消息类型, hongbao_refund,hongbao_record,personal,moment
  title: String, //消息的标题
  content: String, //消息的内容
  //type = hongbao_refund | hongbao_record时返回数据
  link: String, //type = hongbao_record时,点击消息跳转的链接
  link_title: String,
  linkType: String, //web-跳转到外部网页, trx
  trxType: String, //hongbao_refund
  orderId: String, //type = hongbao_refund时,通过orderId查看账单明细

  createdAt: Number, //消息的创建时间
  isViewed: Boolean, //消息是否已查看
  //留言
  pics: [String], //留言对应的图片
  messageFrom: { //
    _id: String, //留言者的主账号ID
    name: String, //姓名
    avatar: String, //头像
    sex: String, //性别
    docChatNum: String, //热线号
    profile: String //简介
  }
}
</source>

==== 2105.消息-获取动态消息 ====
* URI: /1/customer/momentMessage
* Method: GET
* Header:
** 验证id和token
* URI params:
** bookmark //分页书签 返回结果中的bookmark 可选
* Response payload:

{
  userId: String, //收到通知用户主账号ID
  bookmark : String , //分页书签
  items : [ {
      moment : {
           zanCount: Number, //点赞数
           sharedCount: Number, //分享次数
           isOriginal: Boolean, 是否为首发
           originalUser: { //首发人信息
             userId: String, //首发人主账号id
             userName: String, //首发人姓名
             docChatNum: String //首发人热线号
            },
           pics: [String], //动态相关的图片
           hongbaoTotalCount:Number //红包总数
           displayContent：String //动态内容
           //动态中 不含有 被推荐人信息时,recommendedUser为null
           recommendedUser: { //动态中含有被推荐人信息
             userName: String, //被推荐人姓名
             docChatNum: String //被推荐人热线号
           }
      },
      momentUser : {
        name:String ，
        avatar : String ,
        userId : String ,
        sex ：String，
        docChatNum ： String
      },//发动态人的信息
      msgCreatedAt: Number //收到动态的时间
  } ],//收到的动态


}
</source>

==== 2106.消息-删除收听动态列表中的item ====
* URI: /1/customer/delMomentMessage
* Method: put
* Header:
** 验证id和token
* Request payload:
<source>
{
    momentId: String, //动态id
}
</source>
* Response payload:
<source>
//成功 200
{}
</source>

==== 2107.消息- 删除某一条消息 ====
* URI: /1/customer/message
* Method: DELETE
* Header:
** 验证id和token
* URI params:
** msgId //消息id
* Request payload:
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2108.设置自动离线 ====
* URI: /1/customer/offline
* Method: PUT
* Header:
** 验证id和token
* Request payload:
<source>
{
    //optional-可选
    isAutoOffline: Boolean, //是否开启自动离线,true-开启自动离线,false-关闭自动离线
    type: String, //offline-设置离线时间,online-设置上线时间
    time: String //时间
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2109.获取折扣券 ====
* URI: /1/customer/getDiscountCoupon
* Method: get
* Header:
** 验证id和token
* Request payload:
<source>

</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2110.获取会员信息 ====
* URI: /1/customer/getMembershipInfo
* Method: get
* Header:
** 验证id和token
* Request payload:
<source>

</source>
* Response payload:
<source>
//成功 200
{
    balance: {type: Number, default: 0},//当前会员可用的消费福利
    cost: {type: Number, default: 0}, // 当前会员实际已经消耗掉的福利
    totalVal:Number,// 总购买的额度
    expiringVal:Number,//即将到期的金额
    membershipVals: [ //可购买的会员额度列表
         {
            title: '会员额度',
            subTitle: '',
            benefitVal: 300, //会员额度
            cost: 25, //售价
            cardNo: '2017050300001',
            expired30Days: 30 * 24 * 60 * 60 * 1000 //过期时间30天
          }

      ]
}
</source>

==== 2111.获取营销相信息 ====
* URI: /1/customer/getMarketingInfo
* Method: get
* Header:
** 验证id和token
* Request payload:
<source>

</source>
* Response payload:
<source>
//成功 200
{
    balance: Number, // 营销推广余额,当前账户未被使用的，实际消费时抵扣
    remainBalance: Number,// 营销推广余额扣除掉已经被预定了的，实际领券时抵扣
                                              // 注意充值时两个balance都应该增加
    checkinNum: Number, //已消费用户数
    remainMemberSize: Number,// 当前剩余的会员名额
    consumedMemberSize: Number,// 当前消耗掉的会员名额
    cps: Number, //cost per sale
    cpsUpdatedAt: Number,//cps修改时间
    isMarketingClosed: Boolean, //true-暂停推广, false-继续推广
    lowestCost: Number, //最低消费

    //商家认证信息
    shopCity : String,//店铺城市
    shopName : String,//店铺名称
    shopAddress : String,//店铺地址
    shopAddressMapInfo : {
        x : Number,//经度
        y : Number//纬度
    },                //店铺地址坐标信息
    shopType : String,//店铺类型
    shopPhoneNum : String,//店铺电话号码
    shopAvatar : String,//商家头像
    shopLicense : String //商家营业执照

    applicationStatus : Number //商家信息审核状态 0 审核中 1 审核通过 -1 审核失败 9 为申请过
}
</source>



==== 2112.获取所有有效的转账优惠券 ====
* URI: /1/customer/validTransferCouponsById
* Method: GET
* URI params:
    需要验证userId，和token
* Response payload:
<source>
//成功 200
[
 {
    "_id": String,
    "type": Number, //优惠券类型，5代金券 6特惠券 7折扣券
    "activityNO": String, // 活动码
    "title": String, //优惠劵标题
    "subTitle": String, //优惠劵副标题
    "description": String, //优惠券描述
    "rmb": Number, //金额
    "dateBegin": Number, //活动起始日期，如：1454774400000
    "dateEnd": Number, //活动结束日期，如：1454947200000
    "timeBegin": Number, //活动日起始时间，如：9
    "timeEnd": Number,//活动日结束时间，如：21
    "expiredAt": Number, //过期时间

    "rmbDescription":String, ////面值描述
    "discount":Number, //折扣率

    "updatedAt": Number,
    "createdAt": Number,

  }
]
</source>

==== 2113.获取当前商户认证信息 ====
* URI: /1/customer/shopInfo
* Method: GET
* URI params:
    需要验证userId，和token
* Response payload:
<source>
//成功 200
 {
    //商家认证信息
      shopCity : String,//店铺城市
      shopName : String,//店铺名称
      shopAddress : String,//店铺地址
      shopAddressMapLon : Number,//经度
      shopAddressMapLat : Number,//纬度
      shopType : String,//店铺类型
      shopPhoneNum : String,//店铺电话号码
      shopAvatar : String,//商家头像
      shopLicense : String， //商家营业执照
      shopSubType ：String //店铺二级类型
  }
</source>

==== 2114.获取商户分类 ====
* URI: /1/customer/allShopType
* Method: GET
* URI params:
    需要验证userId，和token
* Response payload:
<source>
//成功 200
 {
    [
        {
        name:'果蔬生鲜'
        subType:[
                '水果',
                '蔬菜',
                '生鲜'
                ]
            },
        {
        name:'医疗'
        subType:[
                '药店',
                '诊所',
                '私立医院',
                '保健品'
                ]
            },
        ...
    ]
 }
</source>

==== 2115.获取用户已购买会员额度列表 ====
* URI: /1/customer/membershipList
* Method: GET
* URI params:
    需要验证userId，和token
* Response payload:
<source>
//成功 200
    [
        {
          userId: {type: String, default: ''},//绑定用户的UUID

          source: {type: String, default: 'docChat'},//数据来源: docChat-医聊
          //  基本属性
          createdAt: {type: Number, default: Date.now},
          updatedAt: {type: Number, default: Date.now},
          isDeleted: {type: Boolean, default: false},
          statisticsUpdatedAt: {type: Number, default: Date.now},

          expiredAt: {type: Number, default: Date.now},// 过期时间,必需大于等于当前时间才能够正常使用
          validAt:{type:Number,default: Date.now}, //生效时间


          cardNo: {type: String, default: ''},//会员卡no，运营进行管理会员卡，优先级, 消费记录cardNo
          balance: {type: Number, default: 0},//当前会员卡可用的消费福利
          cost: {type: Number, default: 0}, // 当前会员卡实际已经消耗掉的福利
          totalVal : {type: Number, default: 0}//当前会员卡总金额

          willExpired: Boolean //是否将要过期
        }
    ]
</source>

==== 2200.获取交易明细 ====
* URI: /1/customer/transaction
* Method: GET
* Header:
** 验证id和token
* Request payload:
<source>
{
    type: String,
    orderId: String
}
</source>
* Response payload:
<source>
//成功 200
{
    "innerTradeNo": String, //内部订单号
    "outerTradeNo": String, //外部订单号,第三方订单号
    "userId": String, //用户id
    "cash": Number, //
    "type": String, //类型，说明见下面
    "createdAt": Number,
    "title": String, //医生:***
    "subType": String, //子类型，说明见下面
    "future": Number, //
    "memo": String //备注
    "payStatus": String, //支付状态: null-初始状态 toPay-待支付 paid-支付成功
  }
</source>

 类型
   子类型：
 ‘pay’ —— 支出
   ‘hongbao’ —— 发红包
 ‘income’ —— 收入
   ‘hongbao’ —— 收红包
   ‘hongbaoRefund’ —— 红包退款


==== 2300.备注-设置备注 ====
* URI: /1/customer/note
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必须的
    userId: String, //被备注用户的主账号id
    noteName : String , //备注名 可为空串,后台保存为其姓名

    //optional-可选的
    desc: String, //描述
    pics: [String], //备注图片,最多九张
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2301.留言-用户自己发送的留言 ====
* URI: /1/customer/myMessages
* Method: GET
* Header:
** 验证id和token
* Request payload:

* Response payload:
<source>
//成功 200
<source>
{
  items: [{
            _id: String, //消息id
            title: String, //消息的标题
            content: String, //消息的内容
            createdAt: Number, //消息的创建时间
            pics: [String], //留言对应的图片
            messageTo: { //被留言者的信息
              _id: String, //被留言者的主账号ID
              name: String, //姓名
              avatar: String, //头像
              sex: String, //性别
              docChatNum: String, //热线号
            }
         }]
} 
</source>

==== 2302.查询最优的优惠券 ====
* URI: /1/customer/getAmountAndBestCoupon
* Method: GET
* Header:
** 验证id和token
* Request payload:
    ** price 转账金额
    ** isVender 是否可以使用代金券
* Response payload:
<source>
//成功 200
<source>
  {
    "amount": 7999.45,//余额
    "income": 19172,
    "payment": -11118.01,
    "willIncome": 54.534,
    //去掉了匹配最佳couponId
</source>

==== 2303.删除通话记录 ====
* URI: /1/customer/delCallsRecord
* Method: put
* Header:
** 验证id和token
* Request payload:
    required: ["orderId"] //订单id
* Response payload:
<source>
//成功 200
<source>
{

}
</source>

==== 2304.历史代金券 ====
* URI: /1/customer/historyCoupons
* Method: GET
* Page
* Header:
** 验证id和token
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    //同2022

    //添加新字段
    isConsumed: Boolean, //true-已使用, false-已过期
}
</source>

==== 2310.获取所有商家所在的地区 ====
* URI: /1/customer/marketing/regions
* Method: GET
* Header:
** 验证id和token
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    items: [{
        city: String, //地区名
        regionPinyin: String //地区拼音名
    }]
}
</source>

==== 2311.获取用户所选地区的可领取返利代金券的商家 ====
* URI: /1/customer/marketing/venders
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** region //地区
** shopType //商家类型
** keyword //搜索关键词,可选
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    hasMembershipBalance: Boolean, //用户是否有会员额度
    keyword: String, //搜索关键词
    items: [{
        _id: String, //商户id
        avatar: String, //商户图标
        name: String, //商户名称
        currentMoment: String, //当前动态
        subTitle: String, //商户名称下显示内容
        couponName: Stirng, //券的名称,如"代金券"
        couponValue: Number, //最低奖励金额,会有小数
        couponRule: String, //代金券使用规则：满xx元可用
        hasCoupon: Boolean, //是否显示"券"图标
        hasRebate: Boolean, //是否显示"返"图标
        remainMemberSize: Number, //剩余代金券数
        hasGotCoupon: Boolean, //是否已领取
        hasCouponUsed: Boolean, //代金券是否已使用
        couponValidTimeDes: String, //有效期描述
        //已领取,返回代金券信息
        userCoupon: {
            "rmb": Number, //金额
            "avatar": String, //二维码中头像
            "qrUrl": String, //二维码被扫描跳转
            "qrDesc": String, //二维码下的描述
            "unionCode": String, //代金券唯一编号
            "desc": String, //代金券描述
        }
    }]
}
</source>

==== 2312.用户在某商户下领取代金券 ====
* URI: /1/customer/marketing/coupon
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    venderId: String, //商户id
    couponValue: Number, //代金券金额
}
</source>
* Response payload:
<source>
//成功 200
{
   "rmb": Number, //金额
   "avatar": String, //二维码中头像
   "qrUrl": String, //二维码被扫描跳转
   "qrDesc": String, //二维码下的描述
   "unionCode": String, //代金券唯一编号
   "desc": String, //代金券描述
}
</source>

==== 2313.商家获取返利代金券信息 ====
* URI: /1/customer/marketing/couponInfo
* Method: GET
* Header:
** 验证id和token //可为用户或商家id
* URI params:
**以下参数三选一
*** couponId //代金券Id
*** qrCode //二维码编号
*** unionCode //代金券编号
**必选-required
*** venderId
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    "_id": String, //代金券id
    "title": String, //代金券标题
    "subTitle": String, //代金券副标题
    "rmb": Number, //金额
    "rmbDescription":String, //面值描述
    "expiredAt": Number, //过期时间
    "isTheVender": Boolean, //是否为指定商户代金券
    "desc": String, //代金券描述
}
</source>

==== 2314.商户确认收券 ====
* URI: /1/customer/coupon/checkin
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    couponId: Number, //代金券id
    venderId: Number, //商户id
}
</source>
* Response payload:
<source>
//成功 200
{
    price: Number,  //券的金额
    payerName: String,  //收款人姓名
    payerAvatar: String //收款人头像
}
</source>

==== 2315.ios验证IAP ====
* URI: /1/customer/iap/auth
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    receipt: String, //ios,iap支付返回的凭证
    prepareId: String, //iap支付生成的预支付订单id
    transactionIdentifier: String, //iap支付生成的交易标识
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2316.收入支出明细 ====
* URI: /1/customer/transactions
* Method: GET
* Header:
** 验证id和token
* Page
* URI params:
* Response payload:
<source>
//成功 200
{
    items:
        [
          {
            //
            "topType": String, //交易明细种类, 收入 | 支出 , income | payment

            "innerTradeNo": String, //内部订单号
            "outerTradeNo": String, //外部订单号,第三方订单号
            "userId": String, //用户id
            "cash": Number, //收入金额>0, 支出金额<0
            "type": String, //
            "createdAt": Number,
            "title": String, //
            "subType": String, //子类型，说明见下面
            "future": Number, //
            "memo": String //备注
            "payStatus": String, //支付状态: null-初始状态 toPay-待支付 paid-支付成功

            //topType = income 收入明细返回字段
            "willIncome": Number //待入账
          }
        ]
}

</source>

==== 2317.设置最低消费(满减金额) ====
* URI: /1/customer/marketing/lowestCost
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
    //required-必选
    lowestCost: Number, //最低消费
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 2318.获取用户所在地附近可领取返利代金券的商家 ====
* URI: /1/customer/coordinate/venders
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** coordinate // 坐标 1.0,1.0 (纬,经)
** scope // 范围 单位(米) <= 0 忽略该参数
** maxSize // 最大返回数据量
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    items: [{
        _id: String, //商户id
        shopName : String, // 商户名称
        shopType : String, // 商户类型, 0: 全程购 1: 医疗
        couponValue : String, // 折扣价格
        coordinate : Array // [ 0.0 , 0.0 ] (纬,经)
    }]
}
</source>

==== 2319.商户列表,获取商户分类,包含全部和其他 ====
* URI: /1/customer/shop/types
* Method: GET
* Header:
** 验证id和token
* URI params:
** shopTypeVersion //shop type 版本号
* Response payload:
<source>
//成功 200
 {
    shopTypeVersion: Number, //shop type 版本号
    items: [
        {
        type:''
        name:'全部分类'
        subTypes:[]
            },
        {
            type:'0400'
            name:'果蔬生鲜'
            subTypes:[
                {
                    type: '',
                    name: '全部'
                },
                {
                    type: '0411',
                    name: '水果'
                }
            ]
        },
        {
            type:'0800'
            name:'医疗'
            subTypes:[
                {
                    type: '',
                    name: '全部'
                },
                {
                    type: '0801',
                    name: '药店'
                }
            ]
        }
        ...
    ]
 }
</source>

==== 2320.获取用户所选地区的可领取返利代金券的商家,全城购调用 ====
* URI: /1/customer/marketing/cityVenders
* Method: GET
* Page
* Header:
** 验证id和token
* URI params:
** region //地区
** shopType //商家类型
** shopSubType //商家子类型
** sortBy //排序 distance | hot
** coordinate // 坐标 1.0,1.0 (纬,经)
** scope //半径
** keyword //搜索关键词,可选
* Request payload:
* Response payload:
<source>
//成功 200
<source>
{
    hasMembershipBalance: Boolean, //用户是否有会员额度
    keyword: String, //搜索关键词
    items: [{
        _id: String, //商户id
        avatar: String, //商户图标
        name: String, //商户名称
        currentMoment: String, //当前动态
        subTitle: String, //商户名称下显示内容
        couponName: Stirng, //券的名称,如"代金券"
        couponValue: Number, //最低奖励金额,会有小数
        couponRule: String, //代金券使用规则：满xx元可用
        hasCoupon: Boolean, //是否显示"券"图标
        hasRebate: Boolean, //是否显示"返"图标
        remainMemberSize: Number, //剩余代金券数
        hasGotCoupon: Boolean, //是否已领取
        hasCouponUsed: Boolean, //代金券是否已使用
        couponValidTimeDes: String, //有效期描述
        distance: String, //距离
        //已领取,返回代金券信息
        userCoupon: {
            "rmb": Number, //金额
            "avatar": String, //二维码中头像
            "qrUrl": String, //二维码被扫描跳转
            "qrDesc": String, //二维码下的描述
            "unionCode": String, //代金券唯一编号
            "desc": String, //代金券描述
        }
    }]
}
</source>

==== 3005.通过医聊号查询医生信息 ====
* URI: /1/doctor/infoByDocChatNum
* Method: GET
* URI params:
** docChatNum
* Response payload:
<source>
//成功 200
返回结果同2051接口
</source>



==== API-4006 上传共享图片 ====
* URI: /1/order/sharePics
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
    {
        orderId: String, //通话订单ID
        sharePics: [String], //共享图片标识数组
    }
</source>
 * Response payload:
 <source>
 //成功 200
 {
    }
</source>

==== API-4008 待支付购买会员/付费推广订单 ====
* URI: /1/order/service
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
    {
        required: ['type', 'price', 'serviceValue',''payType'],
        optional: ['payPwd','memberInviteCode']
        //type : String      membership - 会员额度
                             marketing - 推广额度
        //price :Number 支付金额
        //serviceValue : Number //会员额度|推广额度
        //payType : String支付类型   ali_pay - 支付宝付款;
                                    sys_pay - 系统账户余额付款;
                                    wx_pay - 微信支付;
                                    iap - 苹果支付
        //payPwd : String 支付密码

        //memberInviteCode : String 会员邀请码 web给native
    }
</source>
* Response payload:
 <source>
 //成功 200
 {
    prepayId : String //订单id
    timestamp //时间戳
  }
</source>


==== 4010.红包-生成红包 ====
* URI: /1/order/hongbao
* Method: POST
* Header:
** 验证id和token
* Request payload:
<source>
{
  //  userId: String, //用户主账号id
    payType: String,
    payPwd: String,
    price: Number, //总金额
    totalCount: Number, //红包个数
}
</source>
* Response payload:
<source>
//成功 200
{
    //公共数据
    prepayId: String, //
    timestamp: Number, //生成订单时间

    //非微信支付,返回数据
    proName: String, //产品名称
}
</source>

==== 4011.红包-退回红包 ====
* URI: /1/order/hongbao
* Method: DELETE
* Header:
** 验证id和token
* Request payload:
<source>
{
    hongbaoId: String, //被退回的红包id
}
</source>
* Response payload:
<source>
//成功 200
{
}
</source>

==== 4012.查看预支付订单支付状态 ====
* URI: /1/order/prepareOrderStatus
* Method: GET
* Header:
** 验证id和token
* Request payload:
<source>
{
    prepareId: String, //预支付订单
    type: String, //红包预订单--hongbao
}
</source>
* Response payload:
<source>
//成功 200
{
    //仅仅type == hongbao时返回hongbaoId字段
    hongbaoId: String, //红包id
    payStatus: String, //paid,成功;否则,失败
}
</source>

==== 6001.20170524活动,领取优惠券 ====
* URI: /1/activity/share/getCoupon170524
* Method: GET
* Header:
** 验证id和token

* Response payload:
<source>
//成功 200
{}
</source>

==== 6002.20170524活动,微信中领取优惠券 ====
* URI: /1/activity/share/getCouponInWX170524
* Method: GET
* Header:
** 验证id和token
* Request payload:
<source>
{
    phoneNum: String
}
* Response payload:
<source>
//成功 200
{}
</source>

==== 8000.批量帮商户充值推广金额、设置cps并且计算相关参数 ====
* URI: /1/operation/marketingRecharge
* Method: POST
* Header:
** 验证id和token //运营账户
* Request payload:
<source>
{
    //required-必选
    "marketingInfos": [{ //待充值商户信息
        docChatNum: String, //热线号
        serviceValue: Number, //充值金额
        cps: Number, //设置cps. cps>=1时,会更改商户cps
    }]
}
</source>
* Response payload:
<source>
//成功 200
</source>

==== 8001.批量帮用户充值会员额度 ====
* URI: /1/operation/membershipRecharge
* Method: POST
* Header:
** 验证id和token //运营账户
* Request payload:
<source>
{
    //required-必选
    "membershipInfos": [{ //待充值用户信息
        docChatNum: String, //热线号
        serviceValue: Number, //充值金额
    }]
}
</source>
* Response payload:
<source>
//成功 200
</source>
= API For Boss =
==== 9001.添加运营商户 ====
* URI: /1/operation/addOpShop
* Method: POST
* Header:
** 验证id和token //运营账户
* Request payload:
<source>
{
    required: ['docChatNum', 'balance', 'cps']
}
</source>
* Response payload:
<source>
==== 9002.更改运营商户信息 ====
* URI: /1/operation/updateOpShop
* Method: PUT
* Header:
** 验证id和token //运营账户
* Request payload:
<source>
{
    required: ['_id'],
    optional: ['cps','addBalance']
}
</source>
* Response payload:
<source>
==== 9003 开启/停止运营商户推广 ====
* URI: /1/operation/switchOpShopStatus
* Method: PUT
* Header:
** 验证id和token //运营账户
* Request payload:
<source>
{
    required: ['_id','status']
    //status : boolean
        true:开启
        false:关闭
}
</source>
* Response payload:
<source>
==== 9004.运营商户list ====
* URI: /1/order/opShop
* Method: GET
* Header:
** 验证id和token
* Request payload:
<source>
{
    shopInfo: String, //热线号、商铺名
    shopCity: String, //城市名
}
</source>
* Response payload:
<source>
//成功 200
{
    userId: String, //主账户Id
      docChatNum : String, //账户热线号
      createdAt: {type: Number, default: Date.now},//用户注册时间
      updatedAt: {type: Number, default: Date.now},//用户最近的更新时间
      isDeleted: {type: Boolean, default: false},//该条记录是否被删除
      statisticsUpdatedAt: {type: Number, default: Date.now},

      balance: {type: Number, default: 0}, // 营销推广余额,当前账户未被使用的，实际消费时抵扣
      remainBalance: {type: Number, default: 0},// 营销推广余额扣除掉已经被预定了的，实际领券时抵扣
      checkinNum: {type: Number, default: 0}, // 商家实际收取了多少代金券

      // 注意充值时两个balance都应该增加
      remainMemberSize: {type: Number, default: 0},// 当前剩余的会员名额
      consumedMemberSize: {type: Number, default: 0},// 当前消耗掉的会员名额
      cps: {type: Number, default: 0}, //cost per sale

      cpsUpdatedAt: {type: Number, default: Date.now},//cps修改时间

      isMarketingClosed: {type: Boolean, default: false}, //true-暂停推广, false-继续推广
      //认证相关信息
      shopCity : String,
      shopName : String,
      shopType : String,
      shopSubType : String
}
</source>